0.
Regole da ricordare:
.Trailing commas è un sistema di aggiungere nuovi elementi, o proprietà al codice js, in cui il contenuto viene elencato così:
..const myArray=[
..    "proprietà1",
..    "proprietà2",
..    "proprietà3",
..];
..è un sistema usato soprattutto per il version control con sistemi come git.
..ex 0.1 of Trailing commas.

-------------------------Grammar---------------------------
1.
.constants
..defined constants in a function work only in the function's scope
..constants properties can be changed
...ex 1.1
..constants cannot have the same name as a var
...ex 1.2
..constants cannot be redeclared
...ex 1.3

2.
.Additions with a number and a string always create a new string
..eg: "the answer is" + 32 = "the answer is 32"
..but with all other operators the result is a number---

3.
.Converting strings into a number:
..parseInt(numero,base numerica(es 2, 10, 16));
...ex 3.1
...con il parseInt è possibile ottenere un numero da una stringa 
..oppure con l'operatore di somma prima della stringa es: (+"1.1")+(+"1.1") = 2.2

4.
.Literals
..Array literals: viene creato un array con una lunghezza e degli elementi predefiniti, 
..Boolean literals, Numeric literals?
..ecc, diversi literals, sono valori fissi che possono avere variabili o simili.

5.
.Control flow e error handling
..try catch come sempre Ex 5.1
..i falsy values, sono valori simili a "false"
...undefined
...null
...0
...NaN
...la stringa vuota ("")


6.
.Loops
..sono presenti loops come for...in (variable in object) che serve per elencare tutte le proprietà di un oggetto
..for...of (variable of object) per elencare le variabili di un oggetto con un indice, come gli array
..Continue e break, come negli altri linguaggi
...continue passa alla prossima iterazione
...break esce dal loops
...entrambi possono essere usati con i labeled statements per 

7.
.functions
..i paramentri delle funzioni sono pass by value, ma le proprietà di quei parametri sono pass by reference
...anche i valori degli elementi degli array sono pass by reference

